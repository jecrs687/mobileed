#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX 15

typedef struct{
	char abr[3];
	char nome[50];
	int tamanho;
}aplicativo;
typedef struct{
	aplicativo app;
	int prox;
}Lista;
typedef struct{
	Lista apps[MAX];
	int IA;
	int disp;
}all;

void ins(all *app,aplicativo proximo,int x){
	int temp;
	int i = app->IA;
	int count = 0;
	temp = app->disp;
	app->disp = app->apps[app->disp].prox;
	app->apps[temp].app = proximo;
	if(app->IA!=-2){
		app->apps[temp].prox =-2;
		app->IA=temp;
		
	}else{
		while(count<x){
			count++;
			i=app->apps[i].prox;
		}
		if(i == app->IA){	
			app->apps[temp].prox = i;
		   	app->IA = temp;
		}else{	
			app->apps[temp].prox = app->apps[i].prox;
			app->apps[i].prox = temp;
		}
	}
}





void rem(all *app, int atual){
	int temp,x;
	int anterior;
	temp = app->disp;
	if(atual!=app->IA){
	for( x =app->IA; app->apps[x].prox!=atual; x=app->apps[x].prox){}
	anterior=x;
	app->disp = app->apps[anterior].prox;
	app->apps[anterior].prox = app->apps[atual].prox;
	app->apps[atual].prox = temp;
}else
{
	app->disp = atual;
	if(app->apps[atual].prox ==-2){
		app->IA=-2;
	}else{
		app->IA=app->apps[atual].prox;
	}
	app->apps[atual].prox=temp;
}}


int remover(all *app,char nome[50]){
	int z;			
		for(z=0;z<strlen(nome);z++){
		nome[z]=tolower(nome[z]);}
	for(z=app->IA;app->apps[z].prox!=-2;z=app->apps[z].prox){
		if(strcmp(app->apps[z].app.abr, nome)==0 || strcmp(app->apps[z].app.nome, nome)==0){	
					rem(app,z);
					return 1;
		}
	}
	return 0;
}
void ler_banco(all *app){
	int x,y,z,count;
	aplicativo temp;
	FILE *dados;
	char banco[30];
	do{do{do{printf("insira o nome do banco de dados:");
	scanf("%s", banco);
	system("cls");
	dados = fopen(banco, "rb");
	if(dados == NULL){printf("Nao existe este arquivo de dados\n");}}while(dados==NULL);
	for(x=0;x<MAX;x++){
		count=0;
		fread(&temp, sizeof(aplicativo),1, dados);
		for(z=0;z<strlen(temp.nome);z++){temp.nome[z]=tolower(temp.nome[z]);}
		if(app->IA !=-2){ 
		for(y=app->IA;y!=-2;y=app->apps[y].prox){
			if(temp.tamanho >= app->apps[y].app.tamanho || app->apps[y].app.tamanho == -2)
			{ 
				ins(app,temp,count);
				break;
			}count++;
		}}else{
			ins(app, temp,0);
		}
	}
	fread(&temp, sizeof(aplicativo), 1,dados);
	if(!feof(dados)){printf("ocorreu um erro na leitura\n");}
	}while(!feof(dados));
	y=0;
	for(x=0;x<MAX;x++){
	if(app->apps[x].app.tamanho < 0){printf("O arquivo esta conrrompido com aplicativos de tamanho impossiveis\n por favor inserir novo arquivo\n"); y=1;}}
	}while(y==1);
	fclose(dados);
}
int listar(all *app,  int tamanho){
	int x,y,w=0,d[3],c=0;
	for(x=app->IA; app->apps[x].prox!=-2; x = app->apps[x].prox){
			for(y=app->apps[x].prox; app->apps[y].prox!=-2;y=app->apps[y].prox){
			d[0] = 0; d[1] = 1; d[2] =2;
					if(app->apps[x].app.tamanho>app->apps[y].app.tamanho){
						while(app->apps[x].app.nome[d[0]] == app->apps[y].app.nome[0] && app->apps[x].app.nome[d[1]] == app->apps[y].app.nome[0] && app->apps[x].app.nome[d[2]] == app->apps[y].app.nome[0])
						{
						d[2]++;
						}
					}							
		}
		strncpy(app->apps[x].app.abr, app->apps[x].app.nome, 3);
		
		if(tamanho==0){
		    app->apps[x].app.abr[2] = app->apps[x].app.nome[d[2]];     
			app->apps[x].app.abr[3] = '\0';                                                                                 
			printf("%s", app->apps[x].app.abr);
			printf("\t");
			w++;}else{		    
			app->apps[x].app.abr[2] = app->apps[x].app.nome[d[2]];     
			app->apps[x].app.abr[3] = '\0';                                                                                 
			printf("%s-%d", app->apps[x].app.abr,app->apps[x].app.tamanho);
			printf("\t");
			w++;}
			if(w==3){w=0;printf("\n");}
				c=1;
		
		
	}
	if(c==0){printf("nenhum aplicativo");}return c;
}
void inserir(all *app, char nome[50], all *next,char mensagem[2000]){			
		int x, y,c,z;
		int count=0;			
		for(z=0;z<strlen(nome);z++){
		nome[z]=tolower(nome[z]);
		}

		for(y=next->IA;next->apps[y].prox!=-2;next->apps[y].prox){
			if(strcmp(nome,next->apps[y].app.nome)==0 || strcmp(next->apps[y].app.abr, nome)==0){		
				strcpy(mensagem, "O aplicativo ja existe");
				mensagem[sizeof("o aplicativo ja existe")]='\0';
				return;
				}
			}
		
		
		for(z=app->IA;app->apps[z].prox=-2;z=app->apps[z].prox){
			if(strcmp(app->apps[z].app.abr, nome)==0 || strcmp(app->apps[z].app.nome, nome)==0){
				if(next->IA !=2){	
					for(y=next->IA;next->apps[y].prox!=-2;y=app->apps[y].prox){
						if(app->apps[z].app.tamanho < next->apps[y].app.tamanho){
							ins(next, app->apps[z].app, count);
							break;
						}
						count++;
																																	 					
					}
					}else{ins(next, app->apps[z].app, 0);}
					strcpy(mensagem, "sucesso");
					mensagem[sizeof("sucesso")]='\0';
					return;
			}
		}
			
		strcpy(mensagem, "O aplicativo nao existe");
		mensagem[sizeof("o aplicativo nao existe")]='\0';
		return;
		}
int menu_listar(all *StoreED, all *app, all *RunED, int x, char mensagem[2000]){
char aplicativo[50];
int c,existir,d;
system("cls");
printf("%s\n", mensagem);
if(x==1){
printf("--------StoreED-------\n");
printf("[3]MeusAppsED [4]AppRumED [5]Sair\n");
printf("----------------------\n");
existir = listar(&StoreED,0);
printf("\n-----------------------\n");
if(existir==1){printf("[0]instalar  [1]remover\n");}
printf("\nEscolha uma opcao:");
scanf("%d", &c);
switch(c)
{
case 0:
	if(existir==1){
	printf("Qual aplicativo voce deseja instalar?");
	scanf("%s", aplicativo);
	inserir(StoreED, aplicativo, app, mensagem);
	return 1;}
	break;
case 1:
if(existir==1){
	printf("Qual aplicativo voce deseja remover?");
	scanf("%s", aplicativo);
	d = remover(StoreED,  aplicativo);
	if(d==0){strcpy(mensagem, "O aplicativo nao existe");
		mensagem[sizeof("o aplicativo nao existe")]='\0';}
	else if(d==1){strcpy(mensagem, "O aplicativo foi removido com sucesso");
		mensagem[sizeof("o aplicativo doi removido com sucesso")]='\0';}
	remover(app, aplicativo);
	remover(RunED,aplicativo);
	return 1;}
	break;
case 3:
	mensagem[0] = '\0';
	return 2;
case 4:
	mensagem[0] = '\0';
return 3;
case 5:
	exit(0);
default:
	break;
}
}else if(x==2)
{
printf("------------MeusAppsED---------\n");
printf("[2]StoreED [4]AppRumED [5]Sair\n");
printf("-------------------------\n");
existir = listar(app, 1);
printf("\n-------------------------");
if(existir==1){printf("\n[0]iniciar [1]remover\n");}
printf("\nEscolha uma opcao:");
scanf("%d", &c);
switch(c)
{
case 0:
	if(existir==1){
	printf("Qual aplicativo voce deseja iniciar?");
	scanf("%s", aplicativo);
	inserir(app, aplicativo, RunED, mensagem);
	return 2;}
	break;
case 1:
	if(existir==1){
	printf("Qual aplicativo voce deseja desinstalar?");
	scanf("%s", aplicativo);
	d = remover(app,aplicativo);
		if(d==0){strcpy(mensagem, "O aplicativo nao existe");
		mensagem[sizeof("o aplicativo nao existe")]='\0';}
	else if(d==1){strcpy(mensagem, "O aplicativo foi removido com sucesso");
		mensagem[sizeof("o aplicativo doi removido com sucesso")]='\0';}
	remover(RunED,aplicativo);
	return 2;}
	break;
case 2:
	mensagem[0] = '\0';
	return 1;
case 4:
	mensagem[0] = '\0';
return 3;
case 5:
	exit(0);
default:
	break;
}}else if(x==3)
{
printf("-----------AppRumED-----------\n");
printf("[2]StoreED [3]MeusAppsED [5]Sair\n");
printf("--------------------------\n");
existir = listar(RunED,0);
printf("\n--------------------------");
if(existir==1){printf("\n[1]remover\n");}
printf("\nEscolha uma opcao:");
scanf("%d", &c);
switch(c)
{

case 1:
	if(existir==1){
	printf("Qual aplicativo voce deseja parar?");
	scanf("%s", aplicativo);
	d = remover(RunED,  aplicativo);
		if(d==0){strcpy(mensagem, "O aplicativo nao existe");
		mensagem[sizeof("o aplicativo nao existe")]='\0';}
	else if(d==1){strcpy(mensagem, "O aplicativo foi removido com sucesso");
		mensagem[sizeof("o aplicativo doi removido com sucesso")]='\0';}
	return 3;}
	break;

case 2:
	mensagem[0] = '\0';
	return 1;
case 3:
	mensagem[0] = '\0';
return 2;
case 5:
	exit(0);
default:
	break;
}}
strcpy(mensagem, "Por favor digite um valor valido");
mensagem[sizeof("Por favor digite um valor valido")]='\0';
return x;}
void zerar(all *StoreED,all *app,all *RunED){
	int x;
	StoreED->IA=-2;
	app->IA=-2;
	RunED->IA=-2;
	StoreED->disp=0;
	app->disp=0;
	RunED->disp=0;
	for(x=0; x<MAX; x++){
		StoreED->apps[x].prox = x+1;
		app->apps[x].prox = x+1;
		RunED->apps[x].prox = x+1;
		if(x+1==MAX){
		StoreED->apps[x].prox = -2;
		app->apps[x].prox = -2;
		RunED->apps[x].prox = -2;
		}
		StoreED->apps[x].app.nome[0] = '\0';
		app->apps[x].app.nome[0] = '\0';
		RunED->apps[x].app.nome[0] = '\0';
		
	}

	
}

int main(){
int x=0;
char mensagem[2000];
mensagem[0]='\0';
all StoreED, MeusAppsED, AppRumED;
zerar(&StoreED, &MeusAppsED,&AppRumED);
for(;x<MAX;x++){
printf("%d", StoreED.apps[x].prox);}
ler_banco(&StoreED);
while(1){x = menu_listar(&StoreED, &MeusAppsED, &AppRumED,x, mensagem);}
return 0;	
}
